// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using test;

#nullable disable

namespace test.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240819002756_AddMunicipalityTable")]
    partial class AddMunicipalityTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("test.Models.Center", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cod_Center")
                        .HasColumnType("int");

                    b.Property<int>("Cod_Parish")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Cod_Parish");

                    b.ToTable("Centers");
                });

            modelBuilder.Entity("test.Models.Municipality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cod_Municipality")
                        .HasColumnType("int");

                    b.Property<int>("Cod_State")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Cod_State");

                    b.ToTable("Municipalities");
                });

            modelBuilder.Entity("test.Models.Parish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cod_Municipality")
                        .HasColumnType("int");

                    b.Property<int>("Cod_Parish")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Cod_Municipality");

                    b.ToTable("Parishes");
                });

            modelBuilder.Entity("test.Models.PollingStation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AE")
                        .HasColumnType("int");

                    b.Property<int>("BERA")
                        .HasColumnType("int");

                    b.Property<int>("CF")
                        .HasColumnType("int");

                    b.Property<int>("Cod_Center")
                        .HasColumnType("int");

                    b.Property<int>("Cod_PollingStation")
                        .HasColumnType("int");

                    b.Property<int>("DC")
                        .HasColumnType("int");

                    b.Property<int>("EG")
                        .HasColumnType("int");

                    b.Property<int>("EM")
                        .HasColumnType("int");

                    b.Property<int>("JABE")
                        .HasColumnType("int");

                    b.Property<int>("JOBR")
                        .HasColumnType("int");

                    b.Property<int>("LB")
                        .HasColumnType("int");

                    b.Property<int>("NM")
                        .HasColumnType("int");

                    b.Property<int>("NullVotes")
                        .HasColumnType("int");

                    b.Property<int>("PollingNumber")
                        .HasColumnType("int");

                    b.Property<string>("Record")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ValidVotes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Cod_Center");

                    b.ToTable("PollingStations");
                });

            modelBuilder.Entity("test.Models.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cod_State")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("States");
                });

            modelBuilder.Entity("test.Models.Center", b =>
                {
                    b.HasOne("test.Models.Parish", "Parish")
                        .WithMany()
                        .HasForeignKey("Cod_Parish")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parish");
                });

            modelBuilder.Entity("test.Models.Municipality", b =>
                {
                    b.HasOne("test.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("Cod_State")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("test.Models.Parish", b =>
                {
                    b.HasOne("test.Models.Municipality", "Municipality")
                        .WithMany()
                        .HasForeignKey("Cod_Municipality")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Municipality");
                });

            modelBuilder.Entity("test.Models.PollingStation", b =>
                {
                    b.HasOne("test.Models.Center", "Center")
                        .WithMany()
                        .HasForeignKey("Cod_Center")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Center");
                });
#pragma warning restore 612, 618
        }
    }
}
